From 61ddacc5cb6e0e7386129428fd3de075e79b88f6 Mon Sep 17 00:00:00 2001
From: "shitao.li" <shitao.li@spreadtrum.com>
Date: Thu, 30 Nov 2017 11:31:53 +0800
Subject: [PATCH 22/25] Handle mouse hover event in AbsListView

On Android 8.0 and 8.1 a change of ViewRootImpl exits touch mode on
mouse/stylus click. As a result, AbsListView will keep selection on
position 0, and will not action if click the list which can be seen
by scrolling to visible.

Add onHoverEvent to handle the mouse event and deal with selection.

Bug: https://issuetracker.google.com/issues/69774628
Test: Scroll a long listview to the end, check the last item is clickable.
Fixes: 7614cdf9 ("Exit touch mode on mouse/stylus click")
Tested-by: Chih-Wei Huang <cwhuang@linux.org.tw>
Change-Id: Ic6acc33779283342abc14d37a7d0514488a5cd1f
---
 core/java/android/widget/AbsListView.java | 33 +++++++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/core/java/android/widget/AbsListView.java b/core/java/android/widget/AbsListView.java
index 4474bc9429f..ca4865e8258 100644
--- a/core/java/android/widget/AbsListView.java
+++ b/core/java/android/widget/AbsListView.java
@@ -3926,6 +3926,39 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
         return false;
     }
 
+    @Override
+    public boolean onHoverEvent(@NonNull MotionEvent ev) {
+        final int action = ev.getActionMasked();
+
+        // Allow the super class to handle hover state management first.
+        final boolean handled = super.onHoverEvent(ev);
+        if (action == MotionEvent.ACTION_HOVER_ENTER
+                || action == MotionEvent.ACTION_HOVER_MOVE) {
+            final int position = pointToPosition((int) ev.getX(), (int) ev.getY());
+            if (position != INVALID_POSITION && position != mSelectedPosition) {
+                final View hoveredItem = getChildAt(position - getFirstVisiblePosition());
+                if (hoveredItem.isEnabled()) {
+                    // Force a focus so that the proper selector state gets
+                    // used when we update.
+                    requestFocus();
+                    positionSelector(position, hoveredItem);
+                    setSelectedPositionInt(position);
+                    setNextSelectedPositionInt(position);
+                }
+                updateSelectorState();
+            }
+        } else {
+            // Do not cancel the selected position if the selection is visible
+            // by other means.
+            if (!shouldShowSelector()) {
+                setSelectedPositionInt(INVALID_POSITION);
+                setNextSelectedPositionInt(INVALID_POSITION);
+            }
+        }
+
+        return handled;
+    }
+
     @Override
     public boolean onTouchEvent(MotionEvent ev) {
         if (!isEnabled()) {
-- 
2.17.1


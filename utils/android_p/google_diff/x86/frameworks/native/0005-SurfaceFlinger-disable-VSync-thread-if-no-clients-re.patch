From 485974072069d9a848649ceb12fafde5cfc627b9 Mon Sep 17 00:00:00 2001
From: "Wang, Yue A" <yue.a.wang@intel.com>
Date: Tue, 21 Jan 2014 17:42:13 +0800
Subject: [PATCH 05/18] SurfaceFlinger: disable VSync thread if no clients
 requiring.

In EventThread, 2 VSYNCs are needed to do composition and update
the client status. So, a 30FPS video may leads to 60FPS VSYNC,
which means the DispSync thread would be waked 60FPS. This is a
unexpected behavior which takes more power consumption. Now we
update the SF status soon after the first VSYNC, which means no
extra VSYNC needed, and the DispSync could be awaked as expected,
and consequently power get saved.

Change-Id: If486eb9b87f109a71f71b510768f15dd733f1233
Orig-Change-Id: I1d3b166021e15a81b2ad770b039761fc2c15fddf
Tracked-On: https://jira01.devtools.intel.com/browse/IMINAN-12211
Category: aosp improvement
Domain: Graphics-SF
Origin: internal
Upstream-Candidate: yes
Signed-off-by: Wang, Yue A <yue.a.wang@intel.com>
Reviewed-on: https://android.intel.com:443/238344
---
 services/surfaceflinger/EventThread.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/services/surfaceflinger/EventThread.cpp b/services/surfaceflinger/EventThread.cpp
index bc271c8ec5..6d8ccd5daf 100644
--- a/services/surfaceflinger/EventThread.cpp
+++ b/services/surfaceflinger/EventThread.cpp
@@ -281,11 +281,11 @@ Vector<sp<EventThread::Connection> > EventThread::waitForEventLocked(
         }
 
         // Here we figure out if we need to enable or disable vsyncs
-        if (timestamp && !waitForVSync) {
-            // we received a VSYNC but we have no clients
-            // don't report it, and disable VSYNC events
+        if (!waitForVSync) {
+            // we have no clients waiting on next VSYNC
+            // just disable VSYNC events.
             disableVSyncLocked();
-        } else if (!timestamp && waitForVSync) {
+        } else if (!timestamp) {
             // we have at least one client, so we want vsync enabled
             // (TODO: this function is called right after we finish
             // notifying clients of a vsync, so this call will be made
-- 
2.17.1

